plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
}

version = project.mod_version
group = 'io.github.diamondstar_mods' // <-- update this to match your GitHub org/user

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

loom {
    mods {
        "modid" {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    // Minecraft and mappings
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Fabric Loader and API
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Quilt Loader and Quilted Fabric API (for Quilt compatibility)
    modImplementation("org.quiltmc:quilt-loader:0.22.0") // Use latest compatible version
    modImplementation("org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.fabric_version}")

    // Optional: JSON parsing
    implementation "com.google.code.gson:gson:2.10.1"
}


processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties["version"]
    }
    // Copy quilt.mod.json to the output jar
    from("src/main/resources/quilt.mod.json") {
        into ""
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}


publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${System.getenv('GITHUB_REPOSITORY')}")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }
}